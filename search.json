[{"path":"https://torbjorn.github.io/wither/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 wither authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://torbjorn.github.io/wither/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Torbjørn Lindahl. Author, maintainer, copyright holder. Anja Minsaas. Author.","code":""},{"path":"https://torbjorn.github.io/wither/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lindahl T, Minsaas (2024). wither: Temporarily Change Project Root. R package version 0.1.0.9000, https://torbjorn.github.io/wither/, https://github.com/torbjorn/wither.","code":"@Manual{,   title = {wither: Temporarily Change Project Root},   author = {Torbjørn Lindahl and Anja Minsaas},   year = {2024},   note = {R package version 0.1.0.9000, https://torbjorn.github.io/wither/},   url = {https://github.com/torbjorn/wither}, }"},{"path":"https://torbjorn.github.io/wither/index.html","id":"wither","dir":"","previous_headings":"","what":"Temporarily Change Project Root","title":"Temporarily Change Project Root","text":"Run block expression temporarily different () root. useful need source R code another project example (might case git submodules)","code":""},{"path":"https://torbjorn.github.io/wither/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Temporarily Change Project Root","text":"can install development version wither GitHub :","code":"# install.packages(\"pak\") pak::pak(\"torbjorn/wither\")"},{"path":[]},{"path":"https://torbjorn.github.io/wither/index.html","id":"with_here","dir":"","previous_headings":"Example","what":"with_here","title":"Temporarily Change Project Root","text":"with_here() evaluates expression temporarily different root():","code":"library(here) library(wither)  was <- here()  d <- tempfile() dir.create(d)  # have here() be somewhere else for an expression is_now <- with_here(d, here())  stopifnot(normalizePath(was) != normalizePath(is_now))  # clean up unlink(d, recursive=TRUE)"},{"path":"https://torbjorn.github.io/wither/index.html","id":"local_here","dir":"","previous_headings":"Example","what":"local_here","title":"Temporarily Change Project Root","text":"local_here() evaluates remainder block temporarily different root():","code":"library(here) library(wither)  was <- here()  d <- tempfile() dir.create(d)  local({      # have here() be somewhere else for the rest of the block     local_here(d)      is_now <- here()      stopifnot(normalizePath(was) != normalizePath(is_now))  })  # clean up unlink(d, recursive=TRUE)"},{"path":"https://torbjorn.github.io/wither/reference/with_here.html","id":null,"dir":"Reference","previous_headings":"","what":"Temporarily Change Project Root — with_here","title":"Temporarily Change Project Root — with_here","text":"Temporarily change () root","code":""},{"path":"https://torbjorn.github.io/wither/reference/with_here.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temporarily Change Project Root — with_here","text":"","code":"with_here(new_here, expr, chdir = FALSE, verbose = FALSE)  local_here(   new_here,   chdir = FALSE,   verbose = FALSE,   .local_envir = parent.frame() )"},{"path":"https://torbjorn.github.io/wither/reference/with_here.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Temporarily Change Project Root — with_here","text":"new_here new temporary root directory expr expression evaluate chdir also temporarily change working directory verbose show messages setting new root .local_envir environment use scoping, see withr::local_dir()","code":""},{"path":"https://torbjorn.github.io/wither/reference/with_here.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Temporarily Change Project Root — with_here","text":"with_here() returns result expression. local_here() returns original value (), change.","code":""},{"path":"https://torbjorn.github.io/wither/reference/with_here.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Temporarily Change Project Root — with_here","text":"Changes ::() temporarily point new directory. Automatically changes back original value finished. with_* local_* flavours functionality mimics typically used withr package.","code":""},{"path":"https://torbjorn.github.io/wither/reference/with_here.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Temporarily Change Project Root — with_here","text":"Torbjørn Lindahl","code":""},{"path":"https://torbjorn.github.io/wither/reference/with_here.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Temporarily Change Project Root — with_here","text":"","code":"library(here) #> here() starts at /home/runner/work/wither/wither library(withr)  d <- local_tempdir()  cat(\"here() is initially:\", here(), \"\\n\") #> here() is initially: /home/runner/work/wither/wither   # temporarily do things uner a different here() root: with_here(d, cat(\"but here() is now:\", here(), \"\\n\")) #> Error in with_here(d, cat(\"but here() is now:\", here(), \"\\n\")): new_here must be a directory  # check that everything is shifted back cat(\"here() is now again:\", here(), \"\\n\") #> here() is now again: /home/runner/work/wither/wither   local({    d <- local_tempdir()    cat(\"here was initially: \", here(), \"\\n\")    local_here(d)    cat(\"after local_here(), here() is: \",here(),\"\\n\")   stopifnot(normalizePath(d) == normalizePath(here()))    # do something that requires here() be elsewhere  }) #> here was initially:  /home/runner/work/wither/wither  #> here() starts at /tmp/Rtmp8rziX4/file134119a13caf #> after local_here(), here() is:  /tmp/Rtmp8rziX4/file134119a13caf  #> here() starts at /home/runner/work/wither/wither  cat(\"outside the block, here() is again:\", here(), \"\\n\") #> outside the block, here() is again: /home/runner/work/wither/wither"},{"path":"https://torbjorn.github.io/wither/news/index.html","id":"wither-development-version","dir":"Changelog","previous_headings":"","what":"wither (development version)","title":"wither (development version)","text":"Added NEWS.md file track changes package.","code":""}]
